const assert = require("assert")
const { isAgari } = require("../libs/hu")
describe("Hu pai", function () {
    it("Four dragons", () => {
        assert.equal(isAgari([27, 27, 27, 1, 2, 3, 27, 0, 5, 6, 5, 3, 2, 3], 27), true)
        assert.equal(isAgari([3, 27, 27, 1, 2, 3, 27, 0, 5, 6, 5, 3, 2, 3], 3), true)
    })
    it("Chaos", () => {
        assert.equal(isAgari([0, 3, 8, 9, 13, 17, 19, 27, 28, 29, 30, 31, 32, 33], 27), true)
        assert.equal(isAgari([0, 3, 5, 9, 13, 17, 19, 27, 28, 29, 30, 31, 32, 33], 27), false)
        assert.equal(isAgari([0, 3, 7, 9, 13, 17, 19, 27, 28, 29, 30, 31, 33, 33], 33), true)
        assert.equal(isAgari([0, 3, 33, 9, 13, 17, 19, 27, 28, 29, 30, 31, 33, 33], 33), true)
        assert.equal(isAgari([0, 3, 4, 6, 9, 13, 17, 19, 27, 28, 29, 30, 31, 33], 4), true)
    })
    it("7 Pairs", () => {
        assert.equal(isAgari([0, 0, 4, 4, 5, 5, 9, 9, 12, 12, 29, 29, 30, 30], 27), true)
        assert.equal(isAgari([0, 0, 4, 4, 5, 5, 9, 9, 12, 12, 29, 31, 30, 30], 29), true)
        assert.equal(isAgari([0, 0, 4, 4, 5, 5, 9, 9, 12, 12, 29, 29, 29, 30], 29), true)
        assert.equal(isAgari([0, 0, 4, 4, 5, 5, 9, 9, 11, 12, 29, 29, 29, 30], 29), true)
        assert.equal(isAgari([0, 0, 4, 4, 5, 5, 8, 9, 11, 12, 29, 29, 29, 30], 29), false)
        assert.equal(isAgari([1, 1, 1, 1, 2, 2, 3, 3, 7, 10, 10, 11, 11, 12, 12], 13), true)
        assert.equal(isAgari([1, 1, 1, 1, 2, 2, 3, 3, 10, 10, 11, 11, 12, 13], 13), true)
        //assert.equal(isAgari([1, 1, 1, 1, 2, 2, 3, 3, 7, 10, 10, 11, 11, 12, 13], 13), true)
    })
    it("Fair hu", () => {
        assert.equal(isAgari([2, 4, 27, 9, 10, 10, 11, 11, 12, 26, 26, 26, 3, 3], 27), true)
        assert.equal(isAgari([2, 4, 27, 9, 10, 10, 11, 11, 12, 26, 26, 26, 3, 3], 27), true)
        assert.equal(isAgari([0, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5], 27), true)
        assert.equal(isAgari([1, 25, 25, 6, 6, 6, 7, 8, 20, 21, 22, 23, 23, 23], 25), true)
        assert.equal(isAgari([0, 1, 1, 2, 2, 2, 3, 3, 4, 4, 4, 4, 5, 5], 6), true)
        assert.equal(isAgari([20, 21, 21, 22, 22, 22, 23, 23, 23, 23, 24, 24, 24, 24], 6), true)
        assert.equal(isAgari([5, 6, 6, 10, 11, 11, 12, 12, 12, 13, 13, 14, 14, 14], 6), true)
        assert.equal(isAgari([27, 27, 28, 28, 29, 18, 18, 19, 19, 20, 20, 24, 25, 26], 29), true)
        assert.equal(isAgari([27, 27, 28, 28, 23, 18, 18, 19, 19, 20, 20, 24, 25, 26], 29), false)
        assert.equal(isAgari([0, 1, 1, 2, 2, 2, 3, 3, 4, 27, 28, 28, 29, 30], 5), false)
        assert.equal(isAgari([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 13], 5), false)
    })
    it("Past Wrong Tests", () => {
        assert.equal(isAgari([0, 0, 0, 3, 3, 4, 5, 6, 18, 18, 23], 3), true)
        assert.equal(isAgari([0, 0, 0, 3, 3, 4, 5, 6, 4, 5, 6, 18, 18, 23], 3), true)
        assert.equal(isAgari([8, 8, 8, 4, 4, 13, 14, 19, 20, 20, 21, 24, 24, 12], 4), true)
    })
})